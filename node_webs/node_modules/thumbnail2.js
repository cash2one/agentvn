//-------------------------------------------------------------------------------------------------
// thumbnail2.js
//-------------------------------------------------------------------------------------------------
exports.convert = function(src_path, des_path, size_limit, cb) {
    var image_format = get_file_type(src_path)
    
    if(!image_format) {
        return
    }

    var open_fun = ms.gd['open' + image_format]

    if(!open_fun) {
        console.log('unknown file type ', image_format)
        return
    }
    
    open_fun(src_path, function(err, src_img){
        if(err) {
            console.log(err)
            return
        }

        var src_size = { w : src_img.width, h : src_img.height }    
        var des_size = convert_size(src_size, size_limit)
        
        var des_img = ms.gd.createTrueColor(des_size.w, des_size.h)

        src_img.copyResampled(des_img, 0, 0, 0, 0, des_size.w, des_size.h, src_img.width, src_img.height)
        
        if(image_format == 'Jpeg') {
            des_img['save' + image_format](des_path, 80, cb)
        }

        else if(image_format == 'Png' ) {
            des_img['save' + image_format](des_path, 8, cb)
        }

        else{
            des_img['save' + image_format](des_path, cb)
        }
    })
}
//-------------------------------------------------------------------------------------------------
var convert_size = function(src_size, size_limit) {
    var des_size = {}

    var base = (src_size.w >= src_size.h) ? { size : src_size.w, horizon : true } : { size : src_size.h, horizon : false }
    if (base.horizon) {
        des_size.w = size_limit.w - 1

        var k = size_limit.w / base.size
        des_size.h = parseInt(k * src_size.h, 10)
    }
    else {
        des_size.h = size_limit.h - 1

        var k = size_limit.h / base.size
        des_size.w = parseInt(k * src_size.w, 10)
    }
    
    return des_size
}
//-------------------------------------------------------------------------------------------------
var get_file_type = function(file_path) {
    var index = file_path.lastIndexOf('.')
    if(index == -1) {
        console.log("file_path error: no postfix ")
        return
    }

    var file_type = file_path.substr(index+1)

    if(file_type == 'jpg') {
        file_type = 'jpeg'
    }   
    
    return file_type.replace(/^[a-z]/, function(m0){ return m0.toUpperCase() })
}
//-------------------------------------------------------------------------------------------------
exports.cut = function(src_path, des_path, x, y, width, height, code, cb) {
    var image_format = get_file_type(src_path)
    
    if(!image_format) {
        return
    }
        
    var open_fun = ms.gd['open' + image_format]

    if(!open_fun) {
        console.log('unknown file type ', image_format)
        return
    }    

    open_fun(src_path, function(err, src_img){
        if(err) {
            console.log(err)
            cb(err)
            return
        }
   
        var des_img = ms.gd.createTrueColor(width, height)
        
        // var color = ms.gd.trueColor(255,255,255)
        // des_img.filledRectangle(0,0,width,height,color)

        var src_x = x < 0 ? 0 : x
        var src_y = y < 0 ? 0 : y
        var dec_x = x < 0 ? -x : 0
        var dec_y = y < 0 ? -y : 0

        src_img.copyResized(des_img, dec_x, dec_y, src_x, src_y, src_img.width, src_img.height, src_img.width, src_img.height)
        
        if(image_format == 'Jpeg') {
            des_img['save' + image_format](des_path, 95, cb)
        }

        else if(image_format == 'Png' ) {
            des_img['save' + image_format](des_path, 0, cb)
        }

        else{
            des_img['save' + image_format](des_path, cb)
        }
    })

}
//-------------------------------------------------------------------------------------------------
exports.resize = function(src_path, des_path, scaling, cb) {
    var image_format = get_file_type(src_path)
    
    if(!image_format) {
        return
    }
        
    var open_fun = ms.gd['open' + image_format]

    if(!open_fun) {
        console.log('unknown file type ', image_format)
        return
    }    

    open_fun(src_path, function(err, src_img){
        if(err) {
            console.log(err)
            cb(err)
            return
        }

        var width  = src_img.width * scaling
        var height = src_img.height * scaling

        var des_img = ms.gd.createTrueColor(width, height)

        src_img.copyResized(des_img, 0, 0, 0, 0, width, height, src_img.width, src_img.height)
        
        if(image_format == 'Jpeg') {
            des_img['save' + image_format](des_path, 95, cb)
        }

        else if(image_format == 'Png' ) {
            des_img['save' + image_format](des_path, 0, cb)
        }

        else{
            des_img['save' + image_format](des_path, cb)
        }
    })
}
//-------------------------------------------------------------------------------------------------
exports.get_image_size = function(src, cb) {
    var image_format = get_file_type(src)
    
    if(!image_format) {
        return
    }
        
    var open_fun = ms.gd['open' + image_format]

    if(!open_fun) {
        console.log('unknown file type ', image_format)
        return
    }    

    open_fun(src, function(err, src_img){
        if(err) {
            console.log(err)
            cb(err)
            return
        }

        cb(src_img.width, src_img.height)
    })
}
//-------------------------------------------------------------------------------------------------
