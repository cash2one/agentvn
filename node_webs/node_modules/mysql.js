//--------------------------------------------------------------------------------------------------------
var mysql = require('mysql-libmysqlclient')
//--------------------------------------------------------------------------------------------------------
var all_sps_info = {}
//--------------------------------------------------------------------------------------------------------
exports.open = function(args, cb) {
	var host = args.host 
	var uid  = args.user
	var pwd  = args.password

	var conn = mysql.createConnectionSync();
	
	var flag = conn.CLIENT_MULTI_STATEMENTS | conn.CLIENT_MULTI_RESULTS

	conn.connect(host, uid, pwd, null, 3306, null, flag, function() {
		conn.setCharsetSync('utf8');
		cb(conn)
	})
}
//--------------------------------------------------------------------------------------------------------//--------------------------------------------------------------------------------------------------------
var use_db = function(conn, db_name, cb) {
	if(!db_name || conn.db_name == db_name) {
		cb()
	}	

	else {
		var sql = 'use ' + db_name
		
		conn.query(sql, function(err) {
			err && console.log(err)
			
			if(!err) {
				conn.db_name = db_name				
			}

			cb(err)
		})
	}
}
//--------------------------------------------------------------------------------------------------------//--------------------------------------------------------------------------------------------------------
exports.exec_sql = function(conn, db_name, sql_str, cb) {
   	use_db(conn, db_name, function() {
	    conn.query(sql_str, function(err, res) {
	        if(err || !res.fetchAll) {
	            cb(err)
	            return
	        }

	        res.fetchAll(function (err, rows) {		            
	            cb(err, rows)
	        })
	    })   		
   	})
}
//--------------------------------------------------------------------------------------------------------//--------------------------------------------------------------------------------------------------------
var get_sp_params_info = function(conn, sp_name, cb) {
	if(all_sps_info[sp_name]) {
		var sp_info = all_sps_info[sp_name]

        var src = sp_info.params_info
		sp_info.params_info = []
        
        for(var i=0; i<src.length; i++) {
            sp_info.params_info[i] = {}
            
            for(var name in src[i]) {
                sp_info.params_info[i][name] = src[i][name] 
            }
            
            if(sp_info.params_info[i].type != 'out'){
               sp_info.params_info[i].value = null     
            }
        }
        
        cb(sp_info)		
	}

	else {

		var sql = "select type, param_list from mysql.proc where name = '" + sp_name + "'"

		exports.exec_sql(conn, null, sql, function(err, rows) {

			var sp_type  	 = rows[0].type
			var param_string = new Buffer(rows[0].param_list).toString('utf8').toLowerCase()
			var params       = param_string.split(',')
			var params_info  = []

			var type_list = { 'in' : 1, 'out' : 1, 'inout' : 1}

			for(var i in params) {
				var param_info = params[i].trim().toLowerCase().split(' ')
				
				if(param_info[0] in type_list) {
					var type = param_info[0]
					var name = param_info[1]
				}

				else {
					var type = 'in'
					var name = param_info[0]
				}

				params_info.push( { type : type, name : name } )
	
			}
			
			all_sps_info[sp_name] = {}
			all_sps_info[sp_name].type = sp_type
			all_sps_info[sp_name].params_info = params_info
			
			cb(all_sps_info[sp_name])
		})
	}
}
//--------------------------------------------------------------------------------------------------------//--------------------------------------------------------------------------------------------------------
var bind_params = function(params_info, params_value) {
	var param_index = 0

	for(var i in params_info) {
		if(params_info[i].type != 'out') {
   			if( Array.isArray(params_value) ) {
				params_info[i].value = params_value[param_index]
				param_index++
   			}	   	

   			else {
   				var param_name = params_info[i].name
   				params_info[i].value = params_value[param_name]
   			}					
		}		
	}

	return params_info
}
//--------------------------------------------------------------------------------------------------------//--------------------------------------------------------------------------------------------------------
var declear_variable = function(conn, db_name, name, value, cb) {
	var sql_str = "set @" + name + ' = ' + '\'' + value + '\'' 

	exports.exec_sql(conn, db_name, sql_str, cb)
}
//--------------------------------------------------------------------------------------------------------//--------------------------------------------------------------------------------------------------------
var declear_sp_variables = function(conn, db_name, params, cb) {
	var inout_param_count = 0
	var executed_count = 0

	for(var i in params) {
		if(params[i].type == 'inout') {
			inout_param_count++
			declear_variable(conn, db_name, params[i].name, params[i].value, function() {
				executed_count++

				if(executed_count == inout_param_count) {
					cb()
				}
			})
		}
	}

	if(inout_param_count == 0) {
		cb()
	}
}
//--------------------------------------------------------------------------------------------------------//--------------------------------------------------------------------------------------------------------
var get_sp_output_params = function(conn, db_name, params, cb) {
	var sql_str = 'select '
	
	for(var i in params) {
		if(params[i].type != 'in') {
			sql_str += '@' + params[i].name + ', '
		}
	}

	if(sql_str == 'select ') {
		cb(null)
		return 
	}

	sql_str = sql_str.substr(0,sql_str.length-2)

	exports.exec_sql(conn, db_name, sql_str, function(err, rows) {
		var output_params = {}
		
		for(var i in rows[0]) {
			var name  = i.substr(1)
			var value = rows[0][i]

			if(value instanceof Buffer) {
			 	value = new Buffer(value).toString()		
			}

			output_params[name] = value
		}
	
		cb(output_params)
	})
}
//--------------------------------------------------------------------------------------------------------//--------------------------------------------------------------------------------------------------------
var free_res = function(conn) {
	while (conn.multiMoreResultsSync()) {
		conn.multiNextResultSync();
		res = conn.storeResultSync();
		if (typeof res.freeSync === 'function') {
		  	res.freeSync();
		}
	}
}
//--------------------------------------------------------------------------------------------------------//--------------------------------------------------------------------------------------------------------
exports.exec_fun = function(conn, db_name, fun_name, params, cb) {
	var sql_str = 'select ' + fun_name + '('

	for(var i in params) {
		sql_str += '\'' + params[i] + '\', '
	}	

	sql_str = sql_str.substr(0,sql_str.length-2)

	sql_str += ')'

	exports.exec_sql(conn, db_name, sql_str, function(err, rows) { 
		for(var i in rows[0]) {
			var result = rows[0][i]
		}

		cb(err, null, null, result)
	}) 
}
//--------------------------------------------------------------------------------------------------------//--------------------------------------------------------------------------------------------------------
exports.exec_sp = function(conn, db_name, sp_name, params_value, cb) {
   	use_db(conn, db_name, function() {
   		get_sp_params_info(conn, sp_name, function(sp_info) {   			
   
   			if(sp_info.type == 'FUNCTION') {
   				exports.exec_fun(conn, db_name, sp_name, params_value, cb)
   				return
   			}
   			
   			var params_info = sp_info.params_info
   			var params = bind_params(params_info, params_value)

   			declear_sp_variables(conn, db_name, params, function() {
	   			var sql_str = 'call ' + sp_name + '(' 
	   		
				for(var i in params) {
					if(params[i].type == 'in') {
						sql_str += '\'' + params_info[i].value + '\', '
					}

					else {
						sql_str += '@' + params_info[i].name + ', '
					}
				}
	   			
	   			sql_str = sql_str.substr(0,sql_str.length-2)
	   			
	   			sql_str += ');'

	   			exports.exec_sql(conn, db_name, sql_str, function(err, rows) {
	   				if(rows) {
	   					free_res(conn)
	   				}

	   				get_sp_output_params(conn, db_name, params, function(output_params) {
	   					cb(err, rows, output_params, null)
	   				})
	   			})	
   			})   			
   		})   	
   	})	
}	
//--------------------------------------------------------------------------------------------------------//--------------------------------------------------------------------------------------------------------