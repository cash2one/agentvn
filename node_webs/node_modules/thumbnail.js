//-------------------------------------------------------------------------------------------------
// thumbnail.js
//-------------------------------------------------------------------------------------------------
var canvas = require('canvas')
var fs     = require('fs')
var image  = canvas.Image
//-------------------------------------------------------------------------------------------------
exports.convert = function(src_path, des_path, size_limit, cb) {
    var img = new image

    img.onerror = function(err) {
        cb(err)
    }

    img.onload = function() {
        var src_size = { w : img.width, h : img.height }
        var des_size = convert_size(src_size, size_limit)

        var cvs = new canvas(des_size.w, des_size.h)
        var ctx = cvs.getContext('2d')

        ctx.drawImage(img, 0, 0, des_size.w, des_size.h)

        cvs.toBuffer(function(err, buf) {
            if (err) {
                cb(err); return
            }

            fs.writeFile(des_path, buf, function(err){
                if (err) {
                    cb(err); return
                }

                cb()
            })
        })
    }

    img.src = src_path
}
//-------------------------------------------------------------------------------------------------
function convert_size(src_size, size_limit) {
    var des_size = {}

    var base = (src_size.w >= src_size.h) ? { size : src_size.w, horizon : true } : { size : src_size.h, horizon : false }
    if (base.horizon) {
        des_size.w = size_limit.w - 1

        var k = size_limit.w / base.size
        des_size.h = parseInt(k * src_size.h, 10)
    }
    else {
        des_size.h = size_limit.h - 1

        var k = size_limit.h / base.size
        des_size.w = parseInt(k * src_size.w, 10)
    }
    
    return des_size
}
//-------------------------------------------------------------------------------------------------