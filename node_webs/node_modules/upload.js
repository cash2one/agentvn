/*
var des_path = process.env.HOME + "/code/node_webs/sites/r.syyx.com/public/party/nycs/_att/"
var option = {
    tupian : {
        naming     : 'date',
        size_limit : 2 * 1024 * 1024,
        size_limit_err : '图片不能超过2M',
        file_type  : 'image',
        file_type_err : '图片类型不正确',
        file_exts  : [ 'jpg', 'png', 'gif', 'jpeg' ],
        file_exts_err: '只能上传jpg,png,gif,jpeg图片'
    },
    yinyue : {
        
    }
}
ms.upload.recv(req, des_path , option, function(err, files, option) {
})

*/

exports.recv = function(req, path , option, cb){
        var form        = new ms.formidable.IncomingForm()
        var des_path    = path       || process.env.HOME + "/code/node_webs/sites/r.syyx.com/public/party/nycs/_att/"

        form.uploadDir  = des_path

        form.parse(req, function(err, fields, files) {

            if (err) {
                console.log("upload err:")
                console.log(err)
                cb(err)
                return
            }

            var fi = 0
            //重组option
            var op_value = reset_option(option, files)
            if(!op_value){
                cb(-1)
                return
            }
            fi = op_value.i
            option = op_value.option

            //判断大小及格式
            var checks = check_option(option, files)
            if(checks != true){
                cb(checks)
                console.log("upload check error:")
                console.log(checks)
                return
            }

            var fi2 = 0
            //重命名
            for(var i in option){
                ms.fs.rename(files[i].path, form.uploadDir + option[i].des_name, function(err) {
                    if(err){
                        console.log("rename err:")
                        console.log(err)
                        cb(-1)
                        return
                    }

                    fi2++

                    if(fi == fi2){
                        cb(false, files, option)
                    }
                })
            }
            return
        })
}

var reset_option = function(op, files){
    var fi = 0
    for(var i in op){
        if(!files[i].name){
            continue
        }

        var file_type = get_file_type(files[i].name)
        if(!file_type){
            continue
        }

        fi++

        var naming      = op[i].naming || 'date'
        var upload_time = ""

        //重命名类型
        switch(naming){
            case('date'):
            default:
                upload_time = (new Date()).getTime() + "_" + parseInt(10000 * Math.random())
                break
        }
        var newfile = upload_time + '.' + file_type

        op[i].des_name = newfile
        op[i].this_type = file_type
    }

    return {i : fi, option : op}
}

var check_option = function(option, files){
    var c = true
    var fi = 0
    var oi = 0
    for(var i in files){
        fi++
    }
    for(var i in option){
        oi++
        if(!files[i]){
            c = -1
            break
        }

        if(files[i].size <= 0){
            c = -1
            break
        }

        if(option[i].file_exts && !check_file_type(option[i].this_type,option[i].file_exts)){
            c = option[i].file_exts_err
            break
        }

        if(option[i].file_type && files[i].type.substring(0,option[i].file_type.length) != option[i].file_type){
            //ms.fs.unlink(files[i].path,function(){})
            c = option[i].file_type_err
            break
        }

        if(option[i].size_limit && files[i].size > option[i].size_limit){
            //ms.fs.unlink(files[i].path,function(){})
            c = option[i].size_limit_err
            break
        }
    }

    if(fi != oi){
        console.log("upload counts not equal:")
        console.log(fi,oi)
        c = -1
    }

    //批量删除所有上传的文件
    if(c != true){
        for(var i in files){
            ms.fs.unlink(files[i].path,function(){})
        }
    }

    return c
}

var check_file_type = function(file_type, file_exts){
    file_type = file_type.toLocaleLowerCase()
    var strs= new Array()

    for (var i = 0; i < file_exts.length; i++)
    {
        if (file_exts[i].toLocaleLowerCase() == file_type)
        {
            return true
            break
        }
    }
    return false
}

var get_file_type = function(filename){
    var i = filename.lastIndexOf(".");
    if(i < 0){
        return false;
    }
    else{
        return filename.substring(i + 1, filename.length)
    }
}