//-------------------------------------------------------------------------------------------------------
// account.js
//-------------------------------------------------------------------------------------------------------
exports.check_exists = function(account, cb) {
    if (ms.reg_use_db) {
        check_exists_by_db(account, cb)
    }
    else {
        check_exists_by_ws(account, cb)
    }
}
//-------------------------------------------------------------------------------------------------------
function check_exists_by_db(account, cb) {
    var db      = ms.db.mssql['ShangYoo_User']
    var sp_name = 'cp_Users_IsExists'

    if (!db) {
        console.log('ShangYoo_User not connected')
        cb(2)

        return
    }

    var args = [ account ]
    db.exec_sp(sp_name, args, function(err, rows, output_params, ret_value) {
        if (err) {
            console.error(err)
            cb(3)

            return
        }

        if (ret_value == 0) {
            cb(0)
        }
        else {
            cb(1)
        }
    })
}
//-------------------------------------------------------------------------------------------------------
function check_exists_by_ws(account, cb) {
    var args = { sUserAccount : account }
    ms.ws.user.GetUserID(args, function(err, result) {
        if (err) {
            console.error(err)
            cb(3)

            return
        }

        if (result.GetUserIDResult == 0) {
            cb(0)
        }
        else {
            cb(1)
        }
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  检查用户登录是否正确
参数：  account：账号
        password：手机号
响应：  0、成功
        1、数据库操作失败
        2、用户账号不存在
        3、密码错误
*/
exports.check_userlogin = function(account, password, cb) { 

    var db      = ms.db.mssql['ShangYoo_User']
    var sp_name = 'cp_Users_GetRecordInfoByName'

    if (!db) {        
        console.error('ShangYoo_User not connected')
        cb(1)
        return
    }


    var args = [ account, false ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1)
            return
        }
        
        if (rows.length == 0) {     
            console.error('account is not exist')
            cb(2) 
            return
        }

        if (rows[0].Password != password) {
            console.error('password is error')
            cb(3)
            return
        }
        
        cb(0)
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  获取用户ID
参数：  account：账号
响应：  0、成功并返回用户ID
        1、数据库操作失败
        2、用户账号不存在
*/
exports.get_userid = function(account, cb) { 

    var db      = ms.db.mssql['ShangYoo_User']
    var sp_name = 'cp_Users_GetRecordInfoByName'

    if (!db) {        
        console.error('ShangYoo_User not connected')
        cb(1,'')
        return
    }


    var args = [ account, false ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1,'')
            return
        }
        
        if (rows.length == 0) {     
            console.error('account is not exist')
            cb(2,'') 
            return
        }
        
        cb(0, rows[0].ID)
    })
}

/*
功能：  获取用户信息
参数：  account：账号
        isdetail：是否获取详细信息
响应：  0、成功
        1、数据库操作失败
        2、用户账号不存在
*/
exports.get_userinfo = function(account, isdetail, cb) { 

    var db      = ms.db.mssql['ShangYoo_User']
    var sp_name = 'cp_Users_GetRecordInfoByName'

    if (!db) {        
        console.error('ShangYoo_User not connected')
        cb(1,'')
        return
    }


    var args = [ account, isdetail ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1,'')
            return
        }
        
        if (rows.length == 0) {     
            console.error('account is not exist')
            cb(2,'') 
            return
        }
        
        cb(0, rows)
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  检查用户是否绑定手机
参数：  account：账号
        mobile：手机号
响应：  0、成功
        1、数据库操作失败
        2、用户未绑定手机
        3、输入的手机号错误
*/
exports.check_mobile = function(account, mobile, cb){
    var db      = ms.db.mssql['ShangYoo_Mobile']    
    var sp_name = 'cp_UsrePhone_GetRecordInfo'

    if (!db) {        
        console.error('ShangYoo_Mobile not connected')
        cb(1)
    }


    var args = [ account ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1)
            return
        }
        
        if(rows.length == 0){     
            console.error('mobile is not exist')
            cb(2) 
            return
        }

        if(rows[0].Phone != mobile){
            console.error('mobile is error')
            cb(3)
            return
        }
        
        cb(0)
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  检查用户的权限
参数：  account：账号
响应：  0、成功
        1、数据库操作失败
        2、用户未绑定手机
        ChangePassword：1有修改密码权限0没有
        Changeselfhelplist：自助封停解封权限
        ChangeStrangeLandLogin：是否开启异地登录告警
*/
exports.check_mobile_right = function(account, cb){
    var db      = ms.db.mssql['ShangYoo_Mobile']    
    var sp_name = 'cp_UsrePhone_GetRecordInfo'

    if (!db) {        
        console.error('ShangYoo_Mobile not connected')
        cb(1)
    }


    var args = [ account ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1)
            return
        }
        
        if(rows.length == 0){     
            console.error('mobile is not exist')
            cb(2) 
            return
        }
        
        cb(0, rows[0].ChangePassword, rows[0].Changeselfhelplist, rows[0].ChangeStrangeLandLogin)
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  获取用户绑定的手机
参数：  account：账号
        mobile：手机号
响应：  0、成功
        1、数据库操作失败
        2、用户未绑定手机
*/
exports.get_mobile = function(account, cb){
    var db      = ms.db.mssql['ShangYoo_Mobile']        
    var sp_name = 'cp_UsrePhone_GetRecordInfo'

    if (!db) {        
        console.error('ShangYoo_Mobile not connected')
        cb(1, '')
    }


    var args = [ account ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1, '')
            return
        }
        
        if(rows.length==0){     
            console.error('mobile is not exist')
            cb(2, '') 
            return
        }
        
        cb(0, rows[0].Phone)
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  获取用户绑定的手机
参数：  account：账号
        mobile：手机号
响应：  0、成功
        1、数据库操作失败
        2、用户未绑定手机
*/
exports.add_usermobile = function(account, phone, cb){
    var db      = ms.db.mssql['ShangYoo_Mobile']  
    var sp_name = 'cp_UsrePhone_AddRecord'

    if (!db) {        
        console.error('ShangYoo_Mobile not connected')
        cb(1)
    }

    var date = ms.u2.date_to_ms_datetime(new Date(), 'tds')
    var args = [ account, phone, date, 1, 1, 1 ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1)
            return
        }       
        
        if (ret == 0) {
            cb(2)
            console.error('bingding over 5 phone')
        }

        if (ret >0 ){
            cb(0)
        }            
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  检查用户是否绑定Appid
参数：  account：账号
        appid：  绑定的Appid
响应：  0、成功
        1、数据库操作失败
        2、用户未绑定AppID
        3、输入的AppID错误
*/
exports.check_appid = function(account, cb) {   
    var db      = ms.db.mssql['ShangYoo_Mobile']    
    var sp_name = 'cp_UserApp_GetRecordInfo'

    if (!db) {        
        console.error('ShangYoo_Mobile not connected')
        cb(1)
        return
    }


    var args = [ account ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1)
            return
        }
        
        if(ret==-1){     
            console.error('account is not binding app')
            cb(2) 
            return
        }

        cb(0, output['@AppID'])
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  检查锁定账号
参数：  userid：账号ID
响应：  0、成功 ,[1未锁定2锁定时间过期3锁定未过期]
        1、数据库操作失败        
*/
exports.check_lockaccount = function(userid, cb){
    var db      = ms.db.mssql['Admin_Service']    
    var sp_name = 'cp_LockGameUser_CheckRecord'

    if (!db) {        
        console.error('Admin_Service not connected')
        cb(1,0)
        return
    }


    var args = [ userid ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1,0)
            return
        }
        
        cb(0, ret)
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  锁定账号
参数：  userid：账号ID
响应：  0、成功
        1、数据库操作失败
*/
exports.lock_account = function(userid, account, cb){
    var db      = ms.db.mssql['Admin_Service']    
    var sp_name = 'cp_LockGameUser_AddRecord'

    if (!db) {        
        console.error('Admin_Service not connected')
        cb(1)
        return
    }


    var args = [ userid, account ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1)
            return
        }
        
        if( ret >0){
            cb(0)   
        }
        else{
            cb(1)
            console.error('add record failed')
        }       
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  解锁账号
参数：  userid: 账号ID
响应：  0、成功
        1、操作失败
*/
exports.unlock_account = function(userid, cb){

    var db      = ms.db.mssql['Admin_Service'] 
    var sp_name = 'cp_LockGameUser_DeleteRecord'

    if (!db) {        
        console.error('Admin_Service not connected')
        cb(1)
        return
    }


    var args = [ userid ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1)
            return
        }
        
        if( ret >0){
            cb(0)   
        }
        else{
            cb(1)
            console.error('delete record failed')
        }            
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  锁定游戏账号
参数：  userid：账号ID
        account: 账号
响应：  0、成功
        1、操作失败
*/
exports.lock_gameaccount = function(userid, account, cb){
    var args = {iUserID : userid, sUserAccount : account }
    ms.ws.gameservice.NYCS_LockAccount_Mobile(args, function(err, result) {
        if (err) {            
            console.error('soap error:', err)
            cb(1)
            return
        }

        if (result.NYCS_LockAccount_MobileResult) {
            cb(0)
        }
        else {
            cb(1)
        }
    })
}

//-------------------------------------------------------------------------------------------------------
/*
功能：  解锁游戏账号
参数：  userid: 账号ID
        account: 账号
响应：  0、成功
        1、操作失败
*/
exports.unlock_gameaccount = function(userid, account, cb){
    var args = {iUserID : userid, sUserAccount : account }
    ms.ws.gameservice.NYCS_UnlockAccount_Mobile(args, function(err, result) {
        if (err) {            
            console.error('soap error:', err)
            cb(1)
            return
        }

        if (result.NYCS_UnlockAccount_MobileResult) {
            cb(0)
        }
        else {
            cb(1)
        }
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  修改密码
参数：  userid：账号ID
        account: 账号
响应：  0、成功
        1、操作失败
*/
exports.modify_password = function(userid, password, cb) {    
    var db      = ms.db.mssql['ShangYoo_User'] 
    var sp_name = 'cp_Users_SetUserPassword'

    if (!db) {        
        console.error('ShangYoo_User not connected')
        cb(1)
        return
    }


    var args = [ userid, password ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1)
            return
        }
        
        cb(0)
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  修改游戏密码
参数：  userid：账号ID
        account: 账号
响应：  0、成功
        1、操作失败
*/
exports.modify_gamepassword = function(userid, account, password, cb) {
    var args = {iUserID : userid, sUserAccount : account , sNewPassword : password }
    ms.ws.gameservice.ChangeGamePassword(args, function(err, result) {
        if (err) {            
            console.error('soap error:', err)
            cb(1)
            return
        }

        if (result.ChangeGamePasswordResult) {
            cb(0)
        }
        else {
            cb(1)
        }
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  获取游戏角色
参数：  account: 账号
响应：  0、成功并返回角色信息
        1、操作失败
*/
exports.get_roles = function(account, cb){
    var db      = ms.db.mssql['Analysis_NYCS'] 
    var sp_name = 'cp_Game_PlayerInfo_GetByAccount'

    if (!db) {        
        console.error('Analysis_NYCS not connected')
        cb(1, '')
        return
    }

    var args = [ account ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1, '')
            return
        }

        cb(0, rows)        
    })
}
/*
功能：  获取游戏角色所在的服务器列表 
参数：  account: 账号
响应：  0、成功并返回服务器信息
        1、操作失败
*/
exports.get_rolesserver = function(account, cb){

    var db      = ms.db.mssql['Analysis_NYCS'] 
    var sp_name = 'cp_Game_PlayerInfo_GetServerName'

    if (!db) {        
        console.error('Analysis_NYCS not connected')
        cb(1, '')
        return
    }

    var args = [ account, 0 ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1, '')
            return
        }
        cb(0, rows)        
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  用户绑定手机App
参数：  account：账号
响应：  0、成功并返回AppID
        1、数据库操作失败
*/
exports.binding_userapp = function(account, cb) {    
    var db      = ms.db.mssql['ShangYoo_Mobile'] 
    var sp_name = 'cp_UserApp_AddRecord'

    if (!db) {        
        console.error('ShangYoo_Mobile not connected')
        cb(1,'')
        return
    }


    var args = [ account ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1,'')
            return
        }

        if(ret == -1){     
            console.error('the user already bingding phone')
            cb(1,'') 
            return
        }

        if(ret == -2){
            console.error('add record to db is error')
            cb(1,'')
            return
        }

        if(ret == -3){
            console.error('execute db error')
            cb(1,'')
            return
        }
        
        cb(0, output['@AppID'])
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  申请取消绑定
参数：  account: 账号
响应：  0、成功并返回角色信息
        1、操作失败
        2、账号未绑定
        3、AppID错误
*/
exports.unbinding_app = function(account, cb) {  

    var db      = ms.db.mssql['ShangYoo_Mobile'] 
    var sp_name = 'cp_UsrePhone_DeleteRecord'

    if (!db) {        
        console.error('ShangYoo_Mobile not connected')
        cb(1)
        return
    }

    var args = [ account ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1)
            return
        }
        
        if(ret ==-1 ){     
            console.error('delete table userapp fail')
            cb(1) 
            return
        }
        
        if(ret ==1 )
        {
            //delete record success
            cb(0)    
        }
        else
        {
            //unknown error   
            console.error('system error') 
            cb(1)
        }
        
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  强制角色下线
参数：  account: 账号
响应：  0、成功并返回角色信息
        1、操作失败
        2、账号未绑定
        3、AppID错误
*/
exports.offline_gameaccount = function(serverid, userid, account, cb){
    var args = {iServerID : serverid, iUserID : userid, sUserAccount : account }
    ms.ws.gameservice.KickUser(args, function(err, result) {
        if (err) {            
            console.error('soap error:', err)
            cb(1)
            return
        }

        if (result.KickUserResult) {
            cb(0)
        }
        else {
            cb(1)
        }
    })
}
//-------------------------------------------------------------------------------------------------------
exports.user_login = function(account, password, cb) {
    var args = { sUserAccount : account, sPassword : password }
    ms.ws.user.UserLogin(args, function(err, r) {
        if (err) {
            console.error(err)
            cb(2); return
        }

        if (!r.UserLoginResult) {
            cb(3); return
        }
	
	    if (!r.UserLoginResult[0]) {
            cb(4); return
        }

        var result = JSON.parse(r.UserLoginResult[0])
        if (result.retcode != '0') {
            cb(result.retcode); return
        }

        delete result.retcode
        
        cb(null, result)
    })
}
//-------------------------------------------------------------------------------------------------------
exports.check_user_login = function(user_info, cb) {
    var args = user_info
    ms.ws.user.CheckUserLogin(args, function(err, r) {

        if (err) {
            console.error(err)
            cb(2); return
        }

        if (!r.CheckUserLoginResult) {
            cb(3); return
        }
	
	    if (!r.CheckUserLoginResult[0]) {
            cb(4); return
        }

        var result = JSON.parse(r.CheckUserLoginResult[0])
        if (result.retcode != '0') {
            cb(result.retcode); return
        }
        
        delete result.retcode

        cb(null, result)
    })
}
//-------------------------------------------------------------------------------------------------------
exports.user_info = function(cookies) {
    var strs= new Array(); 
    var user_info = {}
    if(!cookies['shangyoo2']){
        return
    }
    
    strs = cookies['shangyoo2'].split("&"); 
    for (i=0;i<strs.length ;i++ ){
        var v = decodeURIComponent(escape(strs[i].substring(strs[i].indexOf("=")+1,strs[i].length)))
        switch(strs[i].substring(0,strs[i].indexOf("="))){
            case "Val0":
                user_info.Val0 = user_info.Val100 = v.replace(/ /g ,"+")
                break
            case "Val1":
                user_info.Val1 = user_info.Val100 = v.replace(/ /g ,"+")
                break
            case "Val2":
                user_info.Val2 = user_info.Val100 = v.replace(/ /g ,"+")
                break
            case "Val3":
                user_info.Val3 = v
                break
            case "Val4":
                user_info.Val4 = v
                break
            case "Val5":
                user_info.Val5 = v
                break
            case "Val6":
                user_info.Val6 = v
                break
            case "Val7":
                user_info.Val7 = v
                break
            case "Val8":
                user_info.Val8 = v
                break
            case "Val100":
                user_info.Val100 = v.replace(/ /g ,"+")
                break
        }
    }

    for (var k in user_info) {
        if (!user_info[k]) {
            return
        }
    }

    return user_info
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  用户逆向激活
参数：  userid:用户ID
响应：  0、成功
        1、数据库操作失败
*/
exports.updateusersactivation = function(userid, converse, cb) {
    var db      = ms.db.mssql['ShangYoo_User']  
    var sp_name = 'cp_UsersActivation_UpdateServiceConverse'

    if (!db) {        
        console.error('db not connected')
        cb(1)
        return
    }
    var date = ms.u2.date_to_ms_datetime(new Date(), 'tds')
    var args = [ userid, converse, date]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1)
            return
        }

        cb(0)
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  获取逆向激活信息
参数：  userid：账号ID
        isdetail：是否获取详细信息
响应：  0、成功
        1、数据库操作失败
        2、用户不存在
*/
exports.get_useractivationinfo = function(userid, cb) { 

    var db      = ms.db.mssql['ShangYoo_User']
    var sp_name = 'cp_UsersActivation_GetRecordInfo'

    if (!db) {        
        console.error('ShangYoo_User not connected')
        cb(1,'')
        return
    }


    var args = [ userid ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1,'')
            return
        }
        
        if (rows.length == 0) {  
            console.error('userid is not exist')
            cb(2,'') 
            return
        }
        
        cb(0, rows)
    })
}
//-------------------------------------------------------------------------------------------------------
/*
功能：  逆向激活
参数：  userid：账号ID
响应：  0、成功
        1、数据库操作失败
*/
exports.add_usersactivation = function(userid, activation, cb){
    var db      = ms.db.mssql['ShangYoo_User']    
    var sp_name = 'cp_UsersActivation_AddRecord'

    if (!db) {        
        console.error('ShangYoo_User not connected')
        cb(1)
        return
    }

    var date = ms.u2.date_to_ms_datetime(new Date(), 'tds')
    var args = [ userid,0,activation,date ]
    db.exec_sp(sp_name, args, function(err, rows, output, ret) {
        if (err) {
            console.error(err)
            cb(1)
            return
        }
        
            cb(0)   
             
    })
}
//-------------------------------------------------------------------------------------------------------
